{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f28\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}
{\f32\froman\fcharset238\fprq2 Times New Roman CE;}{\f33\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f35\froman\fcharset161\fprq2 Times New Roman Greek;}{\f36\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f37\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f38\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f39\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f256\fswiss\fcharset238\fprq2 Verdana CE;}
{\f257\fswiss\fcharset204\fprq2 Verdana Cyr;}{\f259\fswiss\fcharset161\fprq2 Verdana Greek;}{\f260\fswiss\fcharset162\fprq2 Verdana Tur;}{\f263\fswiss\fcharset186\fprq2 Verdana Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;
\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;
\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 \snext0 Normal;}{
\s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs24\ul\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 \sbasedon0 \snext0 heading 1;}{
\s2\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 \sbasedon0 \snext0 heading 2;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive 
\b\f28\ulnone\cf0\animtext0 \sbasedon10 Hyperlink;}}{\info{\title InterBasic Developers Help}{\author Peter Winter-Smith}{\operator Peter Winter-Smith}{\creatim\yr2002\mo11\dy10\hr17\min42}{\revtim\yr2002\mo11\dy19\hr17\min47}{\version7}{\edmins14}
{\nofpages5}{\nofwords1216}{\nofchars6316}{\*\company Student - No Organisation}{\nofcharsws7443}{\vern8269}}\paperw11906\paperh16838 \widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin
\dghspace180\dgvspace180\dghorigin1800\dgvorigin1440\dghshow1\dgvshow1\jexpand\viewkind1\viewscale60\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule \fet0\sectd 
\linex0\headery708\footery708\colsx708\endnhere\sectlinegrid360\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang
{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7
\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain 
\s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs24\ul\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {InterBasic Developers Help}{\b0\ulnone 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {
\par }\pard\plain \s2\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {Introduction (About InterBasic).
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {
Since InterBasic is a very new language the chances are that this is the only syntax help file that you will see for a long time.
\par This version of InterBasic is a pre-release version, it was really just a compilation of all my ideas for a programming language put into one big beta.
\par InterBasic is programmed entirely by Peter Winter-Smith over a period of five days of coding and about two weeks of planning. The IDE and EXE was all designed by Peter Winter-Smith. In fact, I did everything myself.
\par 
\par }{\b Syntax Help }{\endash  Learning the language.
\par The InterBasic language is reasonably similar to that of Visual Basic, as it is the language that I am most acquainted with.
\par 
\par There are four types of components in InterBasic:
\par  -The command button (Cmd);
\par  -The text box (Text);
\par  -The label (Label);
\par  -The image control (Image).
\par 
\par You can also have variables (Var).
\par 
\par Each of these has a number that is incremented by 1 each time a new control is created in the fashion that follows:
\par 
\par Cmd(1)
\par   Cmd(2)
\par     Cmd(3)
\par        Cmd(4)
\par 
\par And:
\par 
\par Text(1)
\par   Text(2)
\par     Text(3)
\par        Text(4)
\par 
\par For a command button and a text box respectively.
\par 
\par }{\b Command Buttons (Cmd):}{
\par Cmd(1).Left = 1000
\par Cmd(1).Top = 1000
\par Cmd(1).Width = 1000
\par Cmd(1).Height = 1000
\par Cmd(1).Visible = \'93True\'94
\par Cmd(1).Caption = \'93Click Me\'94
\par 
\par The \lquote Left, Top, Width and Top\rquote  settings adjust the size and position of a component on a form at runtime. These cannot be used in conjunction with text boxes or variables.
\par 
\par The \lquote Visible\rquote  function can be given the parameter \'93True\'94 or \'93False\'94, these must be contained within quotes. These can be used in conjunction with text boxes and variables. This changes the visibility of a component.
\par 
\par The \lquote Caption\rquote  property assigns a new caption to the command button. This can be used in conjunction with text boxes and variables.
\par 
\par }{\b Text Boxes (Text):}{
\par Text(1).Left = 1000
\par Text(1).Top = 1000
\par Text(1).Width = 1000
\par Text(1).Height = 1000
\par Text(1).Visible = \'93True\'94
\par Text(1).Caption = \'93Text Here\'94
\par Text(1).LoadFile = \'93C:\\TextFile.txt\'94
\par Text(1).SaveFile = \'93C:\\TextFile.txt\'94
\par 
\par The \lquote Left, Top, Width and Top\rquote  settings adjust the size and position of a component on a form at runtime. These cannot be used in conjunction with text boxes or variables.
\par 
\par The \lquote Visible\rquote  function can be given the parameter \'93True\'94 or \'93False\'94, these must be contained within quotes. These can be used in conjunction with text boxes and variables. This changes the visibility of a component.
\par 
\par The \lquote Caption\rquote  property assigns a new caption to text box. This can be used in conjunction with text boxes and variables.
\par 
\par The \lquote LoadText\rquote  and  \lquote SaveText\rquote  command allows the file to be opened or saved to the specified path. This can be used with both variables and text boxes.
\par 
\par }{\b Label Controls (Label):}{
\par Label(1).Left = 1000
\par Label(1).Top = 1000
\par Label(1).Width = 1000
\par Label(1).Height = 1000
\par Label(1).Visible = \'93True\'94
\par Label(1).Caption = \'93Label Text\'94
\par 
\par The \lquote Left, Top, Width and Top\rquote  settings adjust the size and position of a component on a form at runtime. These cannot be used in conjunction with text boxes or variables.
\par 
\par The \lquote Visible\rquote  function can be given the parameter \'93True\'94 or \'93False\'94, these must be contained within quotes. These can be used in conjunction with text boxes and variables. This changes the visibility of a component.
\par 
\par The \lquote Caption\rquote  property assigns a new caption to the label control. This can be used in conjunction with text boxes and variables.
\par 
\par }{\b Image Box Controls (Image):}{
\par Image(1).Left = 1000
\par Image(1).Top = 1000
\par Image(1).Width = 1000
\par Image(1).Height = 1000
\par Image(1).Visible = \'93True\'94
\par Image(1).Picture =  \'93C:\\picture.bmp\'94
\par 
\par The \lquote Left, Top, Width and Top\rquote  settings adjust the size and position of a component on a form at runtime. These cannot be used in conjunction with text boxes or variables.
\par 
\par The \lquote Visible\rquote  function can be given the parameter \'93True\'94 or \'93False\'94, these must be contained within quotes. These can be used in conjunction with text boxes and variables. This changes the visibility of a component.
\par 
\par The \lquote Picture\rquote  property loads a picture into the memory and displays it on the form/ this can be used with variables and text boxes.
\par 
\par }{\b Variables(Var) and Text Boxes(Text):}{
\par 
\par You can create temporary text containers called variables at runtime. These cannot be overwritten and each one can hold up to one megabyte of characters. You can have as many as you like.
\par For example:
\par 
\par CreateVar(0)<-\'93love\'94
\par CreateVar(1)<-\'93war\'94
\par 
\par Two variables have been created. These can be used like this:
\par 
\par MsgBox \'93Make \{Var(0)\} not \{Var(1)\}!\'94
\par 
\par This will pop up a message box saying \'93Make love not war\'94.
\par As you can see, it placed the text from the variable in between \lquote \{\}\rquote  in the message.
\par You can do this with textboxes too!
\par 
\par Text(1).Caption = \'93welcome\'94
\par MsgBox \'93Hello and \{Text(1)\}!\'94
\par 
\par This will pop up a message saying, \'93Hello and welcome!\'94
\par 
\par Variables begin at #0 components begin at #1.
\par 
\par Variables preserve the variables and the textboxes as text rather than dynamically update the string.
\par 
\par }{\b If Statements:}{
\par InterBasic supports basic \lquote If \endash  Else \endash  End If\rquote  statements. The following symbols can be used:
\par \'93=\'94, \'93<>\'94, \'93>\'94 \'93<\'94
\par 
\par These can be implemented as follows:
\par 
\par Text(3).Visible = \'93False\'94
\par Text(3).Caption = "\{Text(1)\}\{Text(2)\}"
\par If Text(3).Caption = "PeterPassword" Then
\par MsgBox "Access Granted!"
\par ElseIf Text(3).Caption = \'93JohnPassword\'94 Then
\par MsgBox \'93Hi John!\'94
\par Else
\par MsgBox "Access Denied!"
\par End If
\par 
\par This program mixes the output from text box #1 and text box number #2 into text box #3 and uses the \lquote If\rquote  statement to check if the password and username are valid. The username is \'93Peter\'94 the password is \'93Password\'94.
\par 
\par }{\b System Commands:}{
\par InterBasic as of now supports basic system commands, such as file deletion, copying and loading. These are called by issuing the \'93System\'94 command with a period and the correct parameter:
\par 
\par System.Delete \'93C:\\AutoExec.Bat\'94
\par System.Copy \'93C:\\AutoExec.Bat->C:\\AutoExec.Old\'94
\par System.Shell \'93C:\\Windows\\Notepad.exe\'94
\par 
\par System can also be placed in text strings as a variable.
\par For example to create a message box containing the system path and executable name you would write:
\par 
\par MsgBox \'93\{System.AppPath\}\\\{System.AppName\}.Exe\'94
\par 
\par }{\b Parsing Functions:}{
\par The internal parser was upgraded, now you can include \lquote chr\rquote , \lquote asc\rquote , \lquote mid\rquote  and all the old functions like \lquote text\rquote  and \lquote var\rquote .
\par 
\par These go as follows:
\par 
\par }{\b Mid:
\par }{Text(1).Caption = \'93abcde\'94
\par MsgBox \'93\{Mid(\lquote \{Text(1)\}\rquote ,4,2)\}\'94
\par 
\par Would return, \'93de\'94.
\par 
\par 
\par }{\b Chr:
\par }{MsgBox \'93\{Chr(100)\}\'94
\par 
\par Would return \'93d\'94.
\par 
\par }{\b Asc:
\par }{
\par MsgBox \'93\{Asc(\lquote d\rquote )\}\'94}{\b 
\par }{
\par Would return \'93100\'94.
\par 
\par }{\b InterBasic Compilation Information:}{
\par 
\par The end of the file \'93Exec.dll\'94 has the text \'93(<EnvironmentEXECode>)\'94 added to it along with the environment code as is found in the \lquote .ibf\rquote  application file. Then the text \'93(<ApplicationEXECode>)\'94
 with the application code found in the \lquote .ibc\rquote  file on the end of that. Examine the end of a compiled file for information.
\par 
\par If you wish to write your own language using the InterBasic SDK just write the code from your application onto the end of the \'93Exec.dll\'94 file. \'93Exec.dll\'94 can be renamed as you see fit, but i
f renames it will not work with the default InterBasic IDE.
\par 
\par Contact me if you wish to use the SDK and need help.
\par 
\par }{\b Tutorials:}{
\par 
\par I can\rquote t think what to put here, email me if you\rquote d like a tutorial, but bear in mind that soon I will be releasing a more powerful version of this language that deals with rich text boxes, like ms-word\rquote 
s text box allowing colours etc. I will have api and internet socket controls too. This version will be coming out soon, but I\rquote m taking a break for the moment, I have way too much school studies to do any more!
\par 
\par Recently I added three tutorials for various functions. Check the \lquote Examples\rquote  folder.
\par }}